@using CBE.Foundation.Dictionary.Extensions
@using CBE.Foundation.SiteExtensions.Extensions
@using Sitecore.Mvc.Configuration
@model CBE.Feature.Accounts.Models.RegistrationInfo

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post, new
{
    @class = "form-signin"
}))
{
    @Html.AddUniqueFormId()
    <div class="form-group @Html.ValidationErrorFor(x => x.Email, "has-error")">
        @Html.LabelFor(x => x.Email, new
                                     {
                                       @class = "control-label"
                                     })

        @Html.TextBoxFor(x => x.Email, new
                                       {
                                         @class = "form-control",
                                         id = "registerEmail",
                                         @placeholder = Html.Sitecore().Dictionary("/Accounts/Register/Register Email Placeholder", "Please enter your e-mail address")
                                       })
        @Html.ValidationMessageFor(x => x.Email, "", new
                                                     {
                                                       @class = "help-block"
                                                     }, "p")
    </div>

    <div class="form-group @Html.ValidationErrorFor(x => x.Password, "has-error")">
        @Html.LabelFor(x => x.Password, new
                                        {
                                          @class = "control-label"
                                        })


        @Html.PasswordFor(x => x.Password, new
                                           {
                                             @class = "form-control",
                                             id = "registerPassword",
                                             @placeholder = Html.Sitecore().Dictionary("/Accounts/Register/Register Password Placeholder", "Please enter your new password")
                                           })
        @Html.ValidationMessageFor(x => x.Password, "", new
                                                        {
                                                          @class = "help-block"
                                                        }, "p")
    </div>

    <div class="form-group @Html.ValidationErrorFor(x => x.ConfirmPassword, "has-error")">
        @Html.LabelFor(x => x.ConfirmPassword, new
                                               {
                                                 @class = "control-label"
                                               })

        @Html.PasswordFor(x => x.ConfirmPassword, new
                                                  {
                                                    @class = "form-control",
                                                    id = "registerConfirmPassword",
                                                    @placeholder = Html.Sitecore().Dictionary("/Accounts/Register/Register Confirm Password Placeholder", "Please confirm you new password")
                                                  })
        @Html.ValidationMessageFor(x => x.ConfirmPassword, "", new
                                                               {
                                                                 @class = "help-block"
                                                               }, "p")
    </div>


    <div class="form-group @Html.ValidationErrorFor(x => x.FirstName, "has-error")">
        @Html.LabelFor(x => x.FirstName, new
                                         {
                                             @class = "control-label"
                                         })

        @Html.TextBoxFor(x => x.FirstName, new
                                           {
                                               @class = "form-control",
                                               id = "firstName",
                                               placeholder = Html.Sitecore().Dictionary("/Accounts/Edit Profile/Edit Profile First Name Placeholder", "Please enter your first name")
                                           })

        @Html.ValidationMessageFor(x => x.FirstName, "", new
                                                         {
                                                             @class = "help-block"
                                                         }, "p")
    </div>

    <div class="form-group @Html.ValidationErrorFor(x => x.LastName, "has-error")">
        @Html.LabelFor(x => x.LastName, new
                                        {
                                            @class = "control-label"
                                        })

        @Html.TextBoxFor(x => x.LastName, new
                                          {
                                              @class = "form-control",
                                              id = "lastName",
                                              placeholder = Html.Sitecore().Dictionary("/Accounts/Edit Profile/Edit Profile Last Name Placeholder", "Please enter your last name")
                                          })

        @Html.ValidationMessageFor(x => x.LastName, "", new
                                                        {
                                                            @class = "help-block"
                                                        }, "p")
    </div>

    <div class="form-group @Html.ValidationErrorFor(x => x.PhoneNumber, "has-error")">
        @Html.LabelFor(x => x.PhoneNumber, new
                                           {
                                               @class = "control-label"
                                           })

        @Html.TextBoxFor(x => x.PhoneNumber, new
                                             {
                                                 @class = "form-control",
                                                 id = "phoneNumber",
                                                 placeholder = Html.Sitecore().Dictionary("/Accounts/Edit Profile/Edit Profile Phone Placeholder", "Please enter your contact phone number")
                                             })

        @Html.ValidationMessageFor(x => x.PhoneNumber, "", new
                                                           {
                                                               @class = "help-block"
                                                           }, "p")
    </div>

    <div class="form-group @Html.ValidationErrorFor(x => x.Interest, "has-error")">
        @Html.LabelFor(x => x.Interest, new
                                        {
                                            @class = "control-label"
                                        })

        @Html.DropDownListFor(x => x.Interest, new SelectList(Model.InterestTypes), "", new
                                                                                        {
                                                                                            @class = "form-control",
                                                                                            id = "interests"
                                                                                        })

        @Html.ValidationMessageFor(x => x.Interest, "", new
                                                        {
                                                            @class = "help-block"
                                                        }, "p")
    </div>


    <input type="submit" class="btn btn-primary btn-lg btn-block" value="@Html.Sitecore().Dictionary("/Accounts/Register/Register", "Register")" />
}